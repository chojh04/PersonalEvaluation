<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Personal">
	<select id="getEmploye" parameterType="HashMap"  resultType="Employe">
		SELECT 
			   E.EMPLOYE_ID AS employeId,
			   E.NAME AS employeName,
			   E.PWD AS password,		  
			   E.USE_YN AS useYn,
			   E.TEAM_CODE AS teamCode,
			   T.TEAM_NAME AS teamName,
			   E.DIVISION_CODE AS divisionCode,
			   D.DIVISION_NAME AS divisionName,
			   A.AUTHORITY_LEVEL AS authLevel,
			   E.POSITION AS position	    
		FROM 
			 KPC_BACKOFFICE.KPC_EMPLOYE E,			 
			 KPC_BACKOFFICE.KPC_DIVISION_INFO D,
			 KPC_BACKOFFICE.KPC_TEAM_INFO T, 
			 KPC_BACKOFFICE.KPC_PERSONAL_AUTHORITY A 
		WHERE 
			E.EMPLOYE_ID=A.EMPLOYE_ID(+)
			AND E.TEAM_CODE = T.TEAM_CODE(+)
			AND E.DIVISION_CODE = D.DIVISION_CODE(+)
			AND E.USE_YN = 'Y'
			<if test='employeId != "kpc_admin"'><![CDATA[AND A.AUTHORITY_LEVEL<4]]></if>
			<if test='employeId != null'> AND E.EMPLOYE_ID=#{employeId}</if>
		ORDER BY E.NAME	

	</select>
	
	<update id="updateEmploye" parameterType="Employe">
		UPDATE KPC_BACKOFFICE.KPC_EMPLOYE
		<set> 	
		<if test="password != null">PWD = #{password}</if>
		</set>
		WHERE
			EMPLOYE_ID  = #{employeId}				
	</update>
	
	<select id="getProjectScore" parameterType="HashMap" resultType="ProjectScore">
	<![CDATA[
		SELECT		
		   PS.SEQ AS seq,	
		   PS.MONTH AS month,	   
		   E.EMPLOYE_ID AS employeId,		   		   		   
		   NVL(PS.SCORE1,0) AS score1,
           NVL(PS.SCORE2,0) AS score2,
           NVL(PS.SCORE3,0) AS score3,
           NVL(PS.SCORE4,0) AS score4,
           NVL(PS.SCORE5,0) AS score5,
           NVL(PS.SCORE6,0) AS score6,
           NVL(PS.SCORE7,0) AS score7,
           PS.DISSENT AS dissent,
           PS.COMMENTS1 AS comments1,
           PS.COMMENTS2 AS comments2,           	
		   PS.STATUS AS status,
		   PS.CONFIRM_NUMBER AS confirmNumber	   			   			
		FROM			
			KPC_BACKOFFICE.KPC_EMPLOYE E,
			KPC_BACKOFFICE.KPC_PERSONAL_PROJECT_SCORE PS
		WHERE 
			PS.MONTH(+) = #{month}
			AND E.EMPLOYE_ID = PS.EMPLOYE_ID(+)
	]]>	
			<if test='searchOption != "all"'>AND E.EMPLOYE_ID(+) = #{employeId}</if>
	</select>
		
	<select id="getProjectScoreById" parameterType="HashMap" resultType="ProjectScore">
	<![CDATA[
		SELECT * FROM(
			<include refid="getProjectScore"/>
		)
		WHERE (	E.EMPLOYE_ID = #{employeId}	
			OR	A.AUTHORITY_LEVEL < #{authCode}	)
	]]>		
	</select>
	
	<select id="getProjectScoreCount" parameterType="HashMap" resultType="int">
	<![CDATA[
		SELECT COUNT(*) AS cnt FROM(
			<include refid="getProjectScore"/>
		)
		WHERE (	E.EMPLOYE_ID = #{employeId}	)
	]]>		
	</select>
	
	<insert id="insertProjectScore" parameterType="ProjectScore">
	<![CDATA[
		INSERT INTO KPC_BACKOFFICE.KPC_PERSONAL_PROJECT_SCORE
		(
		  SEQ, MONTH, EMPLOYE_ID, SCORE1, SCORE2, SCORE3, SCORE4, SCORE5, SCORE6, SCORE7, DISSENT, COMMENTS1, COMMENTS2, STATUS, INSERT_DATE
		)
		VALUES
		(
		  KPC_ADMIN_SEQ.NEXTVAL,
		  #{month},
		  #{employeId},
		  #{score1},
		  #{score2},
		  #{score3},
		  #{score4},
		  #{score5},
		  #{score6},
		  #{score7},
		  #{dissent},
		  #{comments1},
		  #{comments2},
		  #{status},
		  SYSDATE
		)
	]]>
	</insert>
	
	<update id="updateProjectScore" parameterType="ProjectScore">
		UPDATE KPC_BACKOFFICE.KPC_PERSONAL_PROJECT_SCORE
		<set> 	
		<if test="score1 != null">SCORE1 = #{score1},</if>
		<if test="score2 != null">SCORE2 = #{score2},</if>
		<if test="score3 != null">SCORE3 = #{score3},</if>
		<if test="score4 != null">SCORE4 = #{score4},</if>
		<if test="score5 != null">SCORE5 = #{score5},</if>
		<if test="score6 != null">SCORE6 = #{score6},</if>
		<if test="score7 != null">SCORE7 = #{score7},</if>
		<if test="status != null">STATUS = #{status},</if>
		</set>
		,INSERT_DATE = SYSDATE		
		<where> 
		month          = #{month}
		AND EMPLOYE_ID     = #{employeId}
		<if test="status==0"> AND STATUS = 0</if>				
		<if test="status==1"> AND (STATUS=0 OR STATUS=4)</if>
		<if test="status==2"> AND STATUS=1</if>
		<if test="status==3"> AND STATUS=2</if>
		<if test="status==4"> AND STATUS=3</if>				
		</where>
	</update>
	
	<update id="updateProjectScoreComments" parameterType="ProjectScore">
		UPDATE KPC_BACKOFFICE.KPC_PERSONAL_PROJECT_SCORE
		<set> 	
		<if test="dissent != null">DISSENT = #{dissent},</if>
		<if test="comments1 != null">COMMENTS1 = #{comments1},</if>
		<if test="comments2 != null">COMMENTS2 = #{comments2},</if>
		<if test="status != null">STATUS = #{status},</if>
		<if test="confirmNumber != null">CONFIRM_NUMBER = #{confirmNumber},</if>
		</set>
		,INSERT_DATE = SYSDATE		
		<where> 
			month          = #{month}
		AND EMPLOYE_ID     = #{employeId}			
		</where>
	</update>
	
	<delete id="deleteProjectScore" parameterType="HashMap">
		DELETE FROM KPC_BACKOFFICE.KPC_PERSONAL_PROJECT_SCORE WHERE SEQ IN 
		<foreach collection="seqList" item="seq" index="index" open="(" close=")" separator=",">	
			#{seq}
		</foreach>
		
	</delete>		
	
	<select id="getPerformanceScore" parameterType="HashMap" resultType="ResultPerformanceScore">
		SELECT * FROM 
		(
			SELECT 							  
			    DISTINCT E.EMPLOYE_ID AS employeId,
			    PS.MONTH AS month,
			    E.NAME AS employeName,
			    A.AUTHORITY_LEVEL AS authLevel,
			    D.DIVISION_NAME AS divisionName, 
	        	E.DIVISION_CODE AS divisionCode,
	        	E.TEAM_CODE AS teamCode, 
			    T.TEAM_NAME AS teamName,
			   	(SELECT SCORE FROM KPC_PERSONAL_PERFORMANCE_SCORE WHERE CONFIRM_NUMBER=1 AND EMPLOYE_ID(+) = E.EMPLOYE_ID AND MONTH(+) = #{month}) AS score1,
			   	(SELECT SCORE FROM KPC_PERSONAL_PERFORMANCE_SCORE WHERE CONFIRM_NUMBER=2 AND EMPLOYE_ID(+) = E.EMPLOYE_ID AND MONTH(+) = #{month}) AS score2,			   	
			    DISSENT AS dissent,
			    (SELECT DISSENT_COMMENTS FROM KPC_PERSONAL_PERFORMANCE_SCORE WHERE CONFIRM_NUMBER=1 AND EMPLOYE_ID(+) = E.EMPLOYE_ID AND MONTH(+) = #{month}) AS dissentComments1,
			    (SELECT DISSENT_COMMENTS FROM KPC_PERSONAL_PERFORMANCE_SCORE WHERE CONFIRM_NUMBER=2 AND EMPLOYE_ID(+) = E.EMPLOYE_ID AND MONTH(+) = #{month}) AS dissentComments2   
			FROM 
				KPC_BACKOFFICE.KPC_EMPLOYE E,
				KPC_BACKOFFICE.KPC_DIVISION_INFO D,
				KPC_BACKOFFICE.KPC_TEAM_INFO T,
				KPC_BACKOFFICE.KPC_PERSONAL_AUTHORITY A,
				KPC_BACKOFFICE.KPC_PERSONAL_PERFORMANCE_SCORE PS
			WHERE
				E.EMPLOYE_ID=A.EMPLOYE_ID(+)
				AND E.TEAM_CODE = T.TEAM_CODE(+)
				AND E.DIVISION_CODE = D.DIVISION_CODE(+)
				AND E.EMPLOYE_ID = PS.EMPLOYE_ID(+)
				<![CDATA[AND A.AUTHORITY_LEVEL < 4 ]]>	
				AND E.USE_YN='Y'
				AND PS.MONTH(+) = #{month}				
			ORDER BY E.NAME
		)
		<where>		
			<if test="authLevel==0"> 
				employeId = #{employeId}				
			</if>
			<if test="authLevel==1 and teamCode>0"> 
				teamCode = #{teamCode}
			</if>
			<if test="authLevel==1 and teamCode==0"> 
				divisionCode = #{divisionCode}
			</if>
		</where>

	</select>
	
	<select id="getPerformanceScoreById" parameterType="HashMap" resultType="ResultPerformanceScore">
		SELECT * FROM 
		(
			SELECT				
			    DISTINCT E.EMPLOYE_ID AS employeId,
			    PS.MONTH AS month,
			    E.NAME AS employeName,
			    A.AUTHORITY_LEVEL AS authLevel, 
			    D.DIVISION_NAME AS divisionName, 
	        	E.DIVISION_CODE AS divisionCode,
	        	E.TEAM_CODE AS teamCode, 
			    T.TEAM_NAME AS teamName,
			   	(SELECT SCORE FROM KPC_PERSONAL_PERFORMANCE_SCORE WHERE CONFIRM_NUMBER=1 AND EMPLOYE_ID(+) = E.EMPLOYE_ID AND MONTH(+) = #{month}) AS score1,
			   	(SELECT SCORE FROM KPC_PERSONAL_PERFORMANCE_SCORE WHERE CONFIRM_NUMBER=2 AND EMPLOYE_ID(+) = E.EMPLOYE_ID AND MONTH(+) = #{month}) AS score2,			   	
			    DISSENT AS dissent,
			    (SELECT COMMENTS FROM KPC_PERSONAL_PERFORMANCE_SCORE WHERE CONFIRM_NUMBER=1 AND EMPLOYE_ID(+) = E.EMPLOYE_ID AND MONTH(+) = #{month}) AS comments1,
			    (SELECT COMMENTS FROM KPC_PERSONAL_PERFORMANCE_SCORE WHERE CONFIRM_NUMBER=2 AND EMPLOYE_ID(+) = E.EMPLOYE_ID AND MONTH(+) = #{month}) AS comments2,
			    (SELECT DISSENT_COMMENTS FROM KPC_PERSONAL_PERFORMANCE_SCORE WHERE CONFIRM_NUMBER=1 AND EMPLOYE_ID(+) = E.EMPLOYE_ID AND MONTH(+) = #{month}) AS dissentComments1,
			    (SELECT DISSENT_COMMENTS FROM KPC_PERSONAL_PERFORMANCE_SCORE WHERE CONFIRM_NUMBER=2 AND EMPLOYE_ID(+) = E.EMPLOYE_ID AND MONTH(+) = #{month}) AS dissentComments2
			FROM 
				KPC_BACKOFFICE.KPC_EMPLOYE E,
				KPC_BACKOFFICE.KPC_DIVISION_INFO D,
				KPC_BACKOFFICE.KPC_TEAM_INFO T,
				KPC_BACKOFFICE.KPC_PERSONAL_AUTHORITY A,
				KPC_BACKOFFICE.KPC_PERSONAL_PERFORMANCE_SCORE PS
			WHERE
				E.EMPLOYE_ID=A.EMPLOYE_ID(+)
				AND E.TEAM_CODE = T.TEAM_CODE(+)
				AND E.DIVISION_CODE = D.DIVISION_CODE(+)
				AND E.EMPLOYE_ID = PS.EMPLOYE_ID(+)
				<![CDATA[AND A.AUTHORITY_LEVEL < 4]]>	
				AND E.USE_YN='Y'
				AND PS.MONTH(+) = #{month}
				AND E.EMPLOYE_ID = #{employeId}				
			ORDER BY E.NAME
		)		
	</select>
	
	<insert id="insertPerformanceScore" parameterType="PerformanceScore">
		INSERT
			INTO KPC_BACKOFFICE.KPC_PERSONAL_PERFORMANCE_SCORE
			  (
			    SEQ,
			    MONTH,
			    EMPLOYE_ID,
			    SCORE,		    
			    DISSENT,
			    COMMENTS,	
			    CONFIRM_NUMBER,
			    INSERT_DATE
			  )
			  VALUES
			  (
			    KPC_ADMIN_SEQ.NEXTVAL,
			    #{month},
			    #{employeId},
			    #{score},		    
			    #{dissent},
			    #{comments},
			    #{confirmNumber},		 
			    SYSDATE
			  )
	</insert>
	
	<update id="updatePerformanceScore" parameterType="PerformanceScore">
		UPDATE KPC_BACKOFFICE.KPC_PERSONAL_PERFORMANCE_SCORE			
			<set> 	
				<if test="score != null">SCORE = #{score},</if>
				<if test="dissentComments != null">DISSENT_COMMENTS = #{dissentComments},</if>
				<if test="comments != null">COMMENTS = #{comments},</if>			
			</set>			
			, INSERT_DATE    = SYSDATE
		WHERE
			EMPLOYE_ID     = #{employeId}
			AND MONTH = #{month}
			AND CONFIRM_NUMBER = #{confirmNumber}
	</update>
	
	<update id="updatePerformanceDissent" parameterType="PerformanceScore">
		UPDATE KPC_BACKOFFICE.KPC_PERSONAL_PERFORMANCE_SCORE			
			SET
				DISSENT = #{dissent}		
				<if test="dissentComments != null">DISSENT_COMMENTS = #{dissentComments},</if>			
			  , INSERT_DATE    = SYSDATE		
		<where>
			EMPLOYE_ID = #{employeId}
			AND MONTH = #{month}			
			<if test="confirmNumber > 0">AND CONFIRM_NUMBER = #{confirmNumber}</if>
		</where>			
	</update>
	
	<delete id="deletePerformanceScore" parameterType="HashMap">
		DELETE FROM  KPC_BACKOFFICE.KPC_PERSONAL_PERFORMANCE_SCORE
		WHERE  EMPLOYE_ID     = #{employeId}
		AND MONTH = #{month}
		AND CONFIRM_NUMBER = #{confirmNumber}
	</delete>
	
	
	<select id="getValueScoreAll" parameterType="HashMap" resultType="ResultValueScore">	
		SELECT * FROM (
			SELECT 
				VS.SEQ AS seq,
			    VS.MONTH AS month,
			    E.EMPLOYE_ID AS employeId,
			    E.NAME AS employeName , 
			    D.DIVISION_NAME AS divisionName,
			    E.DIVISION_CODE AS divisionCode,
			    A.AUTHORITY_LEVEL AS authLevel, 
			    T.TEAM_NAME AS teamName,
			   	NVL(VS.SCORE1,0) AS score1,
		        NVL(VS.SCORE2,0) AS score2,
		        NVL(VS.SCORE3,0) AS score3,
		        NVL(VS.SCORE4,0) AS score4,
		        NVL(VS.SCORE5,0) AS score5,
		        NVL(VS.SCORE6,0) AS score6,
		        NVL(VS.SCORE7,0) AS score7,		  
		        NVL(VS.SCORE8,0) AS score8,	 
		        NVL(VS.STATUS,0) AS status,
			    VS.COMMENTS AS comments,	    		    
			    NVL(VS.CONFIRM_NUMBER,1) AS confirmNumber
			FROM 
				KPC_BACKOFFICE.KPC_EMPLOYE E,
				KPC_BACKOFFICE.KPC_DIVISION_INFO D,
				KPC_BACKOFFICE.KPC_TEAM_INFO T,
				KPC_BACKOFFICE.KPC_PERSONAL_AUTHORITY A,
				KPC_BACKOFFICE.KPC_PERSONAL_VALUE_SCORE VS
			WHERE
				E.EMPLOYE_ID=A.EMPLOYE_ID(+)
				AND E.TEAM_CODE = T.TEAM_CODE(+)
				AND E.DIVISION_CODE = D.DIVISION_CODE(+)
				AND E.EMPLOYE_ID = VS.EMPLOYE_ID(+)
				AND E.USE_YN='Y'
				<![CDATA[AND A.AUTHORITY_LEVEL < 4]]>			
				AND VS.CONFIRM_NUMBER(+) = 1
				AND VS.MONTH(+) = #{month}
			UNION
			SELECT 
				VS.SEQ AS seq,
			    VS.MONTH AS month,
			    E.EMPLOYE_ID AS employeId,
			    E.NAME AS employeName , 
			    D.DIVISION_NAME AS divisionName,
			    E.DIVISION_CODE AS divisionCode, 
			    A.AUTHORITY_LEVEL AS authLevel,
			    T.TEAM_NAME AS teamName,
			   	NVL(VS.SCORE1,0) AS score1,
		        NVL(VS.SCORE2,0) AS score2,
		        NVL(VS.SCORE3,0) AS score3,
		        NVL(VS.SCORE4,0) AS score4,
		        NVL(VS.SCORE5,0) AS score5,
		        NVL(VS.SCORE6,0) AS score6,
		        NVL(VS.SCORE7,0) AS score7,		  
		        NVL(VS.SCORE8,0) AS score8,	 
		        NVL(VS.STATUS,0) AS status,
			    VS.COMMENTS AS comments,	    		    
			    NVL(VS.CONFIRM_NUMBER,2) AS confirmNumber
			FROM 
				KPC_BACKOFFICE.KPC_EMPLOYE E,
				KPC_BACKOFFICE.KPC_DIVISION_INFO D,
				KPC_BACKOFFICE.KPC_TEAM_INFO T,
				KPC_BACKOFFICE.KPC_PERSONAL_AUTHORITY A,
				KPC_BACKOFFICE.KPC_PERSONAL_VALUE_SCORE VS
			WHERE
				E.EMPLOYE_ID=A.EMPLOYE_ID(+)
				AND E.TEAM_CODE = T.TEAM_CODE(+)
				AND E.DIVISION_CODE = D.DIVISION_CODE(+)
				AND E.EMPLOYE_ID = VS.EMPLOYE_ID(+)
				AND E.USE_YN='Y'
				<![CDATA[AND A.AUTHORITY_LEVEL < 4]]>	
				AND VS.CONFIRM_NUMBER(+) = 2
				AND VS.MONTH(+) = #{month}
		)
		<where>	
			<if test="authLevel==0"> 
				employeId = #{employeId}				
			</if>
			<if test="authLevel==1"> 
				divisionCode = (
				 				SELECT DIVISION_CODE 
								FROM KPC_BACKOFFICE.KPC_EMPLOYE 
								WHERE EMPLOYE_ID=#{employeId}
							   )
			</if>
		</where>
		ORDER BY employeName
	</select>
	
	<select id="getValueScoreById" parameterType="HashMap" resultType="ResultValueScore">	
		SELECT 
			VS.SEQ AS seq,
		    VS.MONTH AS month,
		    E.EMPLOYE_ID AS employeId,
		    E.NAME AS employeName , 
		    D.DIVISION_NAME AS divisionName,
		    E.DIVISION_CODE AS divisionCode,
		    A.AUTHORITY_LEVEL AS authLevel,
		    T.TEAM_NAME AS teamName,
		   	NVL(VS.SCORE1,0) AS score1,
	        NVL(VS.SCORE2,0) AS score2,
	        NVL(VS.SCORE3,0) AS score3,
	        NVL(VS.SCORE4,0) AS score4,
	        NVL(VS.SCORE5,0) AS score5,
	        NVL(VS.SCORE6,0) AS score6,
	        NVL(VS.SCORE7,0) AS score7,	
	        NVL(VS.SCORE8,0) AS score8,		   
	        NVL(VS.STATUS,0) AS status,
		    VS.COMMENTS AS comments,	    		    
		    NVL(VS.CONFIRM_NUMBER,#{confirmNumber}) AS confirmNumber
		FROM 
			KPC_BACKOFFICE.KPC_EMPLOYE E,
			KPC_BACKOFFICE.KPC_DIVISION_INFO D,
			KPC_BACKOFFICE.KPC_TEAM_INFO T,
			KPC_BACKOFFICE.KPC_PERSONAL_AUTHORITY A,
			KPC_BACKOFFICE.KPC_PERSONAL_VALUE_SCORE VS
		WHERE
			E.EMPLOYE_ID=A.EMPLOYE_ID(+)
			AND E.TEAM_CODE = T.TEAM_CODE(+)
			AND E.DIVISION_CODE = D.DIVISION_CODE(+)
			AND E.EMPLOYE_ID = VS.EMPLOYE_ID(+)
			AND E.USE_YN='Y'	
			<![CDATA[AND A.AUTHORITY_LEVEL < 4]]>		
			AND VS.CONFIRM_NUMBER(+) = #{confirmNumber}
			AND VS.MONTH(+) = #{month}
			AND E.EMPLOYE_ID = #{employeId}		
	</select>
		
	<insert id="insertValueScore" parameterType="ValueScore">
		<![CDATA[
		INSERT INTO KPC_BACKOFFICE.KPC_PERSONAL_VALUE_SCORE
		(
		  SEQ, MONTH, EMPLOYE_ID, SCORE1, SCORE2, SCORE3, SCORE4, SCORE5, SCORE6, SCORE7, SCORE8, COMMENTS, CONFIRM_NUMBER,
		  INSERT_DATE
		)
		VALUES
		(
		  KPC_ADMIN_SEQ.NEXTVAL,
		  #{month},
		  #{employeId},
		  #{score1},
		  #{score2},
		  #{score3},
		  #{score4},
		  #{score5},
		  #{score6},
		  #{score7},
		  #{score8},
		  #{comments},
		  #{confirmNumber},
		  SYSDATE
		)
	]]>
	</insert>
	
	<update id="updateValueScore" parameterType="ValueScore">
		UPDATE KPC_BACKOFFICE.KPC_PERSONAL_VALUE_SCORE
		<set>
		<if test="score1 != null">SCORE1 = #{score1},</if>
		<if test="score2 != null">SCORE2 = #{score2},</if>
		<if test="score3 != null">SCORE3 = #{score3},</if>
		<if test="score4 != null">SCORE4 = #{score4},</if>
		<if test="score5 != null">SCORE5 = #{score5},</if>
		<if test="score6 != null">SCORE6 = #{score6},</if>
		<if test="score7 != null">SCORE7 = #{score7},</if>
		<if test="score8 != null">SCORE8 = #{score8},</if>
		<if test="comments != null">COMMENTS = #{comments},</if>	
		</set>
		,INSERT_DATE = SYSDATE	
		WHERE MONTH = #{month}
			AND EMPLOYE_ID     = #{employeId}
			AND CONFIRM_NUMBER = #{confirmNumber}
	</update>
	
	<delete id="deleteValueScore" parameterType="HashMap">
		DELETE FROM  KPC_BACKOFFICE.KPC_PERSONAL_VALUE_SCORE
		WHERE  EMPLOYE_ID     = #{employeId}
		AND MONTH = #{month}
	</delete>
	
	<select id="getPerformanceScoreCount" parameterType="HashMap" resultType="Integer">
		SELECT COUNT(*) cnt FROM 
			KPC_BACKOFFICE.KPC_PERSONAL_PERFORMANCE_SCORE
		WHERE 
			MONTH = #{month}
		AND EMPLOYE_ID = #{employeId}
		AND CONFIRM_NUMBER = #{confirmNumber} 
	</select>
	
	<select id="getValueScoreCount" parameterType="HashMap" resultType="Integer">
		SELECT COUNT(*) cnt FROM 
			KPC_BACKOFFICE.KPC_PERSONAL_VALUE_SCORE
		WHERE 
			MONTH = #{month}
		AND EMPLOYE_ID = #{employeId}
		AND CONFIRM_NUMBER = #{confirmNumber} 
	</select>
	
		
	
	<select id="getProjectScoreHistory" parameterType="HashMap" resultType="ProjectScore">
		SELECT		
		   PS.SEQ AS seq,
		   E.EMPLOYE_ID AS employeId, 
		   E.NAME AS employeName , 
		   D.DIVISION_NAME AS divisionName, 
		   T.TEAM_NAME AS teamName,
		   PS.SCORE1 AS score1, PS.SCORE2 AS score2, PS.SCORE3 AS score3, PS.SCORE4 AS score4, PS.SCORE5 AS score5, PS.SCORE6 AS score6, PS.SCORE7 AS score7,
		   PS.STATUS AS status			   			
		FROM
			KPC_BACKOFFICE.KPC_EMPLOYE E,
			KPC_BACKOFFICE.KPC_DIVISION_INFO D,
			KPC_BACKOFFICE.KPC_TEAM_INFO T,
			KPC_BACKOFFICE.KPC_PERSONAL_AUTHORITY A,
			KPC_BACKOFFICE.KPC_PERSONAL_PROJECT_SCORE_HST PS
		WHERE 
			E.EMPLOYE_ID=A.EMPLOYE_ID(+)
			AND E.TEAM_CODE = T.TEAM_CODE(+)
			AND E.DIVISION_CODE = D.DIVISION_CODE(+)
			AND E.EMPLOYE_ID = PS.EMPLOYE_ID(+)			
			AND PS.MONTH(+) = #{month}
			AND E.USE_YN='Y'
			<![CDATA[AND A.AUTHORITY_LEVEL < 4]]>	
			<if test='searchOption != "all"'>AND E.EMPLOYE_ID = #{employeId}</if>
		ORDER BY E.NAME	
	</select>
	
	<select id="getProjectScoreByIdHistory" parameterType="HashMap" resultType="ResultProjectScore">
	<![CDATA[
		SELECT * FROM(
			<include refid="getProjectScore"/>
		)
		WHERE (	E.EMPLOYE_ID = #{employeId}	
			OR	A.AUTHORITY_LEVEL < #{authCode}	)
	]]>		
	</select>
	
	<insert id="insertProjectScoreHistory" parameterType="ProjectScore">
	<![CDATA[
		INSERT INTO KPC_BACKOFFICE.KPC_PERSONAL_PROJECT_SCORE_HST
		(
		  SEQ, MONTH, EMPLOYE_ID, SCORE1, SCORE2, SCORE3, SCORE4, SCORE5, SCORE6, SCORE7, DISSENT, COMMENTS1, COMMENTS2, STATUS,
		  INSERT_DATE
		)
		VALUES
		(
		  KPC_ADMIN_SEQ.NEXTVAL,
		  #{month},
		  #{employeId},
		  #{score1},
		  #{score2},
		  #{score3},
		  #{score4},
		  #{score5},
		  #{score6},
		  #{score7},
		  #{dissent},
		  #{comments1},
		  #{comments2},
		  #{status},
		  SYSDATE
		)
	]]>
	</insert>
	
	<update id="updateProjectScoreHistory" parameterType="ProjectScore">
		UPDATE KPC_BACKOFFICE.KPC_PERSONAL_PROJECT_SCORE_HST
		<set> 	
		<if test="score1 != null">SCORE1 = #{score1},</if>
		<if test="score2 != null">SCORE2 = #{score2},</if>
		<if test="score3 != null">SCORE3 = #{score3},</if>
		<if test="score4 != null">SCORE4 = #{score4},</if>
		<if test="score5 != null">SCORE5 = #{score5},</if>
		<if test="score6 != null">SCORE6 = #{score6},</if>
		<if test="score7 != null">SCORE7 = #{score7},</if>
		<if test="dissent != null">DISSENT = #{dissent},</if>
		<if test="comments1 != null">COMMENTS1 = #{comments1},</if>
		<if test="comments2 != null">COMMENTS2 = #{comments2},</if>
		<if test="status != null">STATUS = #{status},</if>
		
		</set>
		,INSERT_DATE = SYSDATE		
		<where> 
		SEQ          = #{seq}
		AND EMPLOYE_ID     = #{employeId}
		<if test="status==0"> AND STATUS = 0</if>				
		<if test="status==1"> AND (STATUS=0 OR STATUS=4)</if>
		<if test="status==2"> AND STATUS=1</if>
		<if test="status==3"> AND STATUS=2</if>
		<if test="status==4"> AND STATUS=3</if>				
		</where>
	</update>

	
	<insert id="insertPerformanceScoreHistory" parameterType="PerformanceScore">
		INSERT
			INTO KPC_BACKOFFICE.KPC_PERSONAL_PERFORMANCE_HST
			  (
			    SEQ,
			    MONTH,
			    EMPLOYE_ID,
			    SCORE,		    
			    DISSENT,
			    COMMENTS,	
			    CONFIRM_NUMBER,
			    INSERT_DATE
			  )
			  VALUES
			  (
			    KPC_ADMIN_SEQ.NEXTVAL,
			    #{month},
			    #{employeId},
			    #{score},		    
			    #{dissent},
			    #{comments},
			    #{confirmNumber},		 
			    SYSDATE
			  )
	</insert>
	
	<update id="updatePerformanceScoreHistory" parameterType="PerformanceScore">
		UPDATE KPC_BACKOFFICE.KPC_PERSONAL_PERFORMANCE_HST			
			<set> 	
				<if test="score != null">SCORE = #{score},</if>
				<if test="dissentComments != null">DISSENT_COMMENTS = #{dissentComments},</if>
				<if test="comments != null">COMMENTS = #{comments},</if>			
			</set>			
			, INSERT_DATE    = SYSDATE
		WHERE
			EMPLOYE_ID     = #{employeId}
			AND MONTH = #{month}
			AND CONFIRM_NUMBER = #{confirmNumber}
	</update>
	
	
	<insert id="insertValueScoreHistory" parameterType="ValueScore">
		<![CDATA[
		INSERT INTO KPC_BACKOFFICE.KPC_PERSONAL_VALUE_SCORE_HST
		(
		  SEQ, MONTH, EMPLOYE_ID, SCORE1, SCORE2, SCORE3, SCORE4, SCORE5, SCORE6, SCORE7, SCORE8, COMMENTS, CONFIRM_NUMBER,
		  INSERT_DATE
		)
		VALUES
		(
		  KPC_ADMIN_SEQ.NEXTVAL,
		  #{month},
		  #{employeId},
		  #{score1},
		  #{score2},
		  #{score3},
		  #{score4},
		  #{score5},
		  #{score6},
		  #{score7},
		  #{score8},
		  #{comments},
		  #{confirmNumber},
		  SYSDATE
		)
	]]>
	</insert>
	
	<update id="updateValueScoreHistory" parameterType="ValueScore">
		UPDATE KPC_BACKOFFICE.KPC_PERSONAL_VALUE_SCORE_HST
		<set>
		<if test="score1 != null">SCORE1 = #{score1},</if>
		<if test="score2 != null">SCORE2 = #{score2},</if>
		<if test="score3 != null">SCORE3 = #{score3},</if>
		<if test="score4 != null">SCORE4 = #{score4},</if>
		<if test="score5 != null">SCORE5 = #{score5},</if>
		<if test="score6 != null">SCORE6 = #{score6},</if>
		<if test="score7 != null">SCORE7 = #{score7},</if>
		<if test="score8 != null">SCORE8 = #{score8},</if>
		<if test="comments != null">COMMENTS = #{comments},</if>	
		</set>
		,INSERT_DATE = SYSDATE	
		WHERE MONTH = #{month}
			AND EMPLOYE_ID     = #{employeId}
			AND CONFIRM_NUMBER = #{confirmNumber}
	</update>
	
	<select id="getPerformanceScoreByIdHistory" parameterType="HashMap" resultType="ResultPerformanceScore">
		SELECT * FROM 
		(
			SELECT				
			    DISTINCT E.EMPLOYE_ID AS employeId,
			    PS.MONTH AS month,
			    E.NAME AS employeName,
			    A.AUTHORITY_LEVEL AS authLevel, 
			    D.DIVISION_NAME AS divisionName, 
	        	E.DIVISION_CODE AS divisionCode, 
			    T.TEAM_NAME AS teamName,
			   	(SELECT SCORE FROM KPC_PERSONAL_PERFORMANCE_HST WHERE CONFIRM_NUMBER=1 AND EMPLOYE_ID(+) = E.EMPLOYE_ID AND MONTH(+) = #{month}) AS score1,
			   	(SELECT SCORE FROM KPC_PERSONAL_PERFORMANCE_HST WHERE CONFIRM_NUMBER=2 AND EMPLOYE_ID(+) = E.EMPLOYE_ID AND MONTH(+) = #{month}) AS score2,			   	
			    DISSENT AS dissent,
			    (SELECT COMMENTS FROM KPC_PERSONAL_PERFORMANCE_HST WHERE CONFIRM_NUMBER=1 AND EMPLOYE_ID(+) = E.EMPLOYE_ID AND MONTH(+) = #{month}) AS comments1,
			    (SELECT COMMENTS FROM KPC_PERSONAL_PERFORMANCE_HST WHERE CONFIRM_NUMBER=2 AND EMPLOYE_ID(+) = E.EMPLOYE_ID AND MONTH(+) = #{month}) AS comments2,
			    (SELECT DISSENT_COMMENTS FROM KPC_PERSONAL_PERFORMANCE_HST WHERE CONFIRM_NUMBER=1 AND EMPLOYE_ID(+) = E.EMPLOYE_ID AND MONTH(+) = #{month}) AS dissentComments1,
			    (SELECT DISSENT_COMMENTS FROM KPC_PERSONAL_PERFORMANCE_HST WHERE CONFIRM_NUMBER=2 AND EMPLOYE_ID(+) = E.EMPLOYE_ID AND MONTH(+) = #{month}) AS dissentComments2
			FROM 
				KPC_BACKOFFICE.KPC_EMPLOYE E,
				KPC_BACKOFFICE.KPC_DIVISION_INFO D,
				KPC_BACKOFFICE.KPC_TEAM_INFO T,
				KPC_BACKOFFICE.KPC_PERSONAL_AUTHORITY A,
				KPC_BACKOFFICE.KPC_PERSONAL_PERFORMANCE_HST PS
			WHERE
				E.EMPLOYE_ID=A.EMPLOYE_ID(+)
				AND E.TEAM_CODE = T.TEAM_CODE(+)
				AND E.DIVISION_CODE = D.DIVISION_CODE(+)
				AND E.EMPLOYE_ID = PS.EMPLOYE_ID(+)
				<![CDATA[AND A.AUTHORITY_LEVEL < 4]]>	
				AND E.USE_YN='Y'
				AND PS.MONTH(+) = #{month}
				AND E.EMPLOYE_ID = #{employeId}				
			ORDER BY E.NAME
		)		
	</select>
	
	
	
	<select id="getPerformanceScoreHistory" parameterType="HashMap" resultType="ResultPerformanceScore">
		SELECT * FROM 
		(
			SELECT 							  
			    DISTINCT E.EMPLOYE_ID AS employeId,
			    PS.MONTH AS month,
			    E.NAME AS employeName,
			    A.AUTHORITY_LEVEL AS authLevel,
			    D.DIVISION_NAME AS divisionName, 
	        	E.DIVISION_CODE AS divisionCode,
	        	E.TEAM_CODE AS teamCode, 
			    T.TEAM_NAME AS teamName,
			   	(SELECT SCORE FROM KPC_PERSONAL_PERFORMANCE_HST WHERE CONFIRM_NUMBER=1 AND EMPLOYE_ID(+) = E.EMPLOYE_ID AND MONTH(+) = #{month}) AS score1,
			   	(SELECT SCORE FROM KPC_PERSONAL_PERFORMANCE_HST WHERE CONFIRM_NUMBER=2 AND EMPLOYE_ID(+) = E.EMPLOYE_ID AND MONTH(+) = #{month}) AS score2,			   	
			    DISSENT AS dissent,
			    (SELECT COMMENTS FROM KPC_PERSONAL_PERFORMANCE_HST WHERE CONFIRM_NUMBER=1 AND EMPLOYE_ID(+) = E.EMPLOYE_ID AND MONTH(+) = #{month}) AS comments1,
			    (SELECT COMMENTS FROM KPC_PERSONAL_PERFORMANCE_HST WHERE CONFIRM_NUMBER=2 AND EMPLOYE_ID(+) = E.EMPLOYE_ID AND MONTH(+) = #{month}) AS comments2   
			FROM 
				KPC_BACKOFFICE.KPC_EMPLOYE E,
				KPC_BACKOFFICE.KPC_DIVISION_INFO D,
				KPC_BACKOFFICE.KPC_TEAM_INFO T,
				KPC_BACKOFFICE.KPC_PERSONAL_AUTHORITY A,
				KPC_BACKOFFICE.KPC_PERSONAL_PERFORMANCE_HST PS
			WHERE
				E.EMPLOYE_ID=A.EMPLOYE_ID(+)
				AND E.TEAM_CODE = T.TEAM_CODE(+)
				AND E.DIVISION_CODE = D.DIVISION_CODE(+)
				AND E.EMPLOYE_ID = PS.EMPLOYE_ID(+)
				<![CDATA[AND A.AUTHORITY_LEVEL < 4]]>	
				AND E.USE_YN='Y'
				AND PS.MONTH(+) = #{month}				
			ORDER BY E.NAME
		)
		<where>		
			<if test="authLevel==0"> 
				employeId = #{employeId}				
			</if>
			<if test="authLevel==1 and teamCode>0"> 
				teamCode = #{teamCode}
			</if>
			<if test="authLevel==1 and teamCode==0"> 
				divisionCode = #{divisionCode}
			</if>
		</where>
	</select>
	
	<select id="getValueScoreHistoryAll" parameterType="HashMap" resultType="ResultValueScore">	
		SELECT * FROM (
			SELECT 
				VS.SEQ AS seq,
			    VS.MONTH AS month,
			    E.EMPLOYE_ID AS employeId,
			    E.NAME AS employeName , 
			    D.DIVISION_NAME AS divisionName,
			    E.DIVISION_CODE AS divisionCode,
			    A.AUTHORITY_LEVEL AS authLevel, 
			    T.TEAM_NAME AS teamName,
			   	NVL(VS.SCORE1,0) AS score1,
		        NVL(VS.SCORE2,0) AS score2,
		        NVL(VS.SCORE3,0) AS score3,
		        NVL(VS.SCORE4,0) AS score4,
		        NVL(VS.SCORE5,0) AS score5,
		        NVL(VS.SCORE6,0) AS score6,
		        NVL(VS.SCORE7,0) AS score7,		  
		        NVL(VS.SCORE8,0) AS score8,	 
		        NVL(VS.STATUS,0) AS status,
			    VS.COMMENTS AS comments,	    		    
			    NVL(VS.CONFIRM_NUMBER,1) AS confirmNumber
			FROM 
				KPC_BACKOFFICE.KPC_EMPLOYE E,
				KPC_BACKOFFICE.KPC_DIVISION_INFO D,
				KPC_BACKOFFICE.KPC_TEAM_INFO T,
				KPC_BACKOFFICE.KPC_PERSONAL_AUTHORITY A,
				KPC_BACKOFFICE.KPC_PERSONAL_VALUE_SCORE_HST VS
			WHERE
				E.EMPLOYE_ID=A.EMPLOYE_ID(+)
				AND E.TEAM_CODE = T.TEAM_CODE(+)
				AND E.DIVISION_CODE = D.DIVISION_CODE(+)
				AND E.EMPLOYE_ID = VS.EMPLOYE_ID(+)
				AND E.USE_YN='Y'
				<![CDATA[AND A.AUTHORITY_LEVEL < 4]]>			
				AND VS.CONFIRM_NUMBER(+) = 1
				AND VS.MONTH(+) = #{month}
			UNION
			SELECT 
				VS.SEQ AS seq,
			    VS.MONTH AS month,
			    E.EMPLOYE_ID AS employeId,
			    E.NAME AS employeName , 
			    D.DIVISION_NAME AS divisionName,
			    E.DIVISION_CODE AS divisionCode, 
			    A.AUTHORITY_LEVEL AS authLevel,
			    T.TEAM_NAME AS teamName,
			   	NVL(VS.SCORE1,0) AS score1,
		        NVL(VS.SCORE2,0) AS score2,
		        NVL(VS.SCORE3,0) AS score3,
		        NVL(VS.SCORE4,0) AS score4,
		        NVL(VS.SCORE5,0) AS score5,
		        NVL(VS.SCORE6,0) AS score6,
		        NVL(VS.SCORE7,0) AS score7,		  
		        NVL(VS.SCORE8,0) AS score8,	 
		        NVL(VS.STATUS,0) AS status,
			    VS.COMMENTS AS comments,	    		    
			    NVL(VS.CONFIRM_NUMBER,2) AS confirmNumber
			FROM 
				KPC_BACKOFFICE.KPC_EMPLOYE E,
				KPC_BACKOFFICE.KPC_DIVISION_INFO D,
				KPC_BACKOFFICE.KPC_TEAM_INFO T,
				KPC_BACKOFFICE.KPC_PERSONAL_AUTHORITY A,
				KPC_BACKOFFICE.KPC_PERSONAL_VALUE_SCORE_HST VS
			WHERE
				E.EMPLOYE_ID=A.EMPLOYE_ID(+)
				AND E.TEAM_CODE = T.TEAM_CODE(+)
				AND E.DIVISION_CODE = D.DIVISION_CODE(+)
				AND E.EMPLOYE_ID = VS.EMPLOYE_ID(+)
				AND E.USE_YN='Y'
				<![CDATA[AND A.AUTHORITY_LEVEL < 4]]>	
				AND VS.CONFIRM_NUMBER(+) = 2
				AND VS.MONTH(+) = #{month}
		)
		<where>	
			<if test="authLevel==0"> 
				employeId = #{employeId}				
			</if>
			<if test="authLevel==1"> 
				divisionCode = (
				 				SELECT DIVISION_CODE 
								FROM KPC_BACKOFFICE.KPC_EMPLOYE 
								WHERE EMPLOYE_ID=#{employeId}
							   )
			</if>
		</where>
		ORDER BY employeName
	</select>
	
	<select id="getValueScoreByIdHistory" parameterType="HashMap" resultType="ResultValueScore">	
		SELECT 
			VS.SEQ AS seq,
		    VS.MONTH AS month,
		    E.EMPLOYE_ID AS employeId,
		    E.NAME AS employeName , 
		    D.DIVISION_NAME AS divisionName,
		    E.DIVISION_CODE AS divisionCode,
		    A.AUTHORITY_LEVEL AS authLevel,
		    T.TEAM_NAME AS teamName,
		   	NVL(VS.SCORE1,0) AS score1,
	        NVL(VS.SCORE2,0) AS score2,
	        NVL(VS.SCORE3,0) AS score3,
	        NVL(VS.SCORE4,0) AS score4,
	        NVL(VS.SCORE5,0) AS score5,
	        NVL(VS.SCORE6,0) AS score6,
	        NVL(VS.SCORE7,0) AS score7,	
	        NVL(VS.SCORE8,0) AS score8,		   
	        NVL(VS.STATUS,0) AS status,
		    VS.COMMENTS AS comments,	    		    
		    NVL(VS.CONFIRM_NUMBER,#{confirmNumber}) AS confirmNumber
		FROM 
			KPC_BACKOFFICE.KPC_EMPLOYE E,
			KPC_BACKOFFICE.KPC_DIVISION_INFO D,
			KPC_BACKOFFICE.KPC_TEAM_INFO T,
			KPC_BACKOFFICE.KPC_PERSONAL_AUTHORITY A,
			KPC_BACKOFFICE.KPC_PERSONAL_VALUE_SCORE_HST VS
		WHERE
			E.EMPLOYE_ID=A.EMPLOYE_ID(+)
			AND E.TEAM_CODE = T.TEAM_CODE(+)
			AND E.DIVISION_CODE = D.DIVISION_CODE(+)
			AND E.EMPLOYE_ID = VS.EMPLOYE_ID(+)
			AND E.USE_YN='Y'	
			<![CDATA[AND A.AUTHORITY_LEVEL < 4]]>		
			AND VS.CONFIRM_NUMBER(+) = #{confirmNumber}
			AND VS.MONTH(+) = #{month}
			AND E.EMPLOYE_ID = #{employeId}		
	</select>
</mapper>